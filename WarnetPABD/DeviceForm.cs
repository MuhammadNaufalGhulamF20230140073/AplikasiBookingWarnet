using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using System.Diagnostics;


namespace WarnetPABD
{
    public partial class DeviceForm : Form
    {
        Koneksi kn = new Koneksi(); //memanggil class koneksi
        string strKonek = "";

        public DeviceForm()
        {
            InitializeComponent();
            strKonek = kn.connectionString();
            LoadDeviceData();
            AutoGenerateDeviceID();
            btnImport.Click += btnImport_Click; // <-- pastikan ada baris ini!
        }

        private void AutoGenerateDeviceID()
        {
            try
            {
                using (SqlConnection conn = new SqlConnection(strKonek))
                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand("sp_GetNextDeviceID", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    var result = cmd.ExecuteScalar();
                    int nextID = Convert.ToInt32(result);
                    txtDeviceID.Text = "D" + nextID.ToString("D3");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Terjadi kesalahan saat generate DeviceID: {ex.Message}");
            }
        }

        private void LoadDeviceData()
        {
            Stopwatch stopwatch = new Stopwatch();
            stopwatch.Start();

            try
            {
                using (SqlConnection conn = new SqlConnection(strKonek))
                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand("sp_GetAllDevice", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);
                    dgvDevices.DataSource = dt;
                }

                stopwatch.Stop();
                MessageBox.Show($"Data berhasil dimuat dalam {stopwatch.Elapsed.TotalSeconds:F2} detik");
            }
            catch (Exception ex)
            {
                stopwatch.Stop();
                MessageBox.Show($"Terjadi kesalahan saat load data: {ex.Message}");
            }
        }


        private void btnAddDevice_Click(object sender, EventArgs e)
        {
            string deviceID = txtDeviceID.Text;
            string spek = txtSpek.Text;
            string lokasiPC = txtLokasiPC.Text;
            string status = cmbStatus.SelectedItem?.ToString();

            if (string.IsNullOrEmpty(spek) || string.IsNullOrEmpty(lokasiPC) || string.IsNullOrEmpty(status))
            {
                MessageBox.Show("Semua field harus diisi!");
                return;
            }

            try
            {
                using (SqlConnection conn = new SqlConnection(strKonek))
                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand("sp_AddDevice", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@DeviceID", deviceID);
                    cmd.Parameters.AddWithValue("@Spek", spek);
                    cmd.Parameters.AddWithValue("@LokasiPC", lokasiPC);
                    cmd.Parameters.AddWithValue("@StatusPC", status);
                    cmd.ExecuteNonQuery();

                    MessageBox.Show("Perangkat berhasil ditambahkan!");
                    LoadDeviceData();
                    ClearForm();
                    AutoGenerateDeviceID();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Terjadi kesalahan saat menambah perangkat: {ex.Message}");
            }
        }

        private void btnUpdateDevice_Click(object sender, EventArgs e)
        {
            string deviceID = txtDeviceID.Text;
            string spek = txtSpek.Text;
            string lokasiPC = txtLokasiPC.Text;
            string status = cmbStatus.SelectedItem?.ToString();

            if (string.IsNullOrEmpty(deviceID) || string.IsNullOrEmpty(spek) || string.IsNullOrEmpty(lokasiPC) || string.IsNullOrEmpty(status))
            {
                MessageBox.Show("Semua field harus diisi!");
                return;
            }

            try
            {
                using (SqlConnection conn = new SqlConnection(strKonek))
                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand("sp_UpdateDevice", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@DeviceID", deviceID);
                    cmd.Parameters.AddWithValue("@Spek", spek);
                    cmd.Parameters.AddWithValue("@LokasiPC", lokasiPC);
                    cmd.Parameters.AddWithValue("@StatusPC", status);
                    cmd.ExecuteNonQuery();

                    MessageBox.Show("Perangkat berhasil diperbarui!");
                    LoadDeviceData();
                    ClearForm();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Terjadi kesalahan saat update perangkat: {ex.Message}");
            }
        }

        private void btnDeleteDevice_Click(object sender, EventArgs e)
        {
            string deviceID = txtDeviceID.Text;

            if (string.IsNullOrEmpty(deviceID))
            {
                MessageBox.Show("Device ID harus dipilih terlebih dahulu!");
                return;
            }

            try
            {
                using (SqlConnection conn = new SqlConnection(strKonek))                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand("sp_DeleteDevice", conn);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@DeviceID", deviceID);

                    int rowsAffected = cmd.ExecuteNonQuery();
                    if (rowsAffected > 0)
                    {
                        MessageBox.Show("Perangkat berhasil dihapus!");
                        LoadDeviceData();
                        ClearForm();
                        AutoGenerateDeviceID();
                    }
                    else
                    {
                        MessageBox.Show("Device ID tidak ditemukan.");
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Terjadi kesalahan saat menghapus perangkat: {ex.Message}");
            }
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            LoadDeviceData();
            ClearForm();
            AutoGenerateDeviceID();
        }

        private void btnImport_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Filter = "Excel Files|*.xlsx;*.xls";
            if (openFileDialog.ShowDialog() == DialogResult.OK)
            {
                string filePath = openFileDialog.FileName;

                Stopwatch stopwatch = new Stopwatch();
                stopwatch.Start();

                PreviewDevice previewForm = new PreviewDevice(filePath);
                previewForm.ShowDialog();

                stopwatch.Stop();
                MessageBox.Show($"Data berhasil diimpor dalam {stopwatch.Elapsed.TotalSeconds:F2} detik");

                LoadDeviceData();
                ClearForm();
                AutoGenerateDeviceID();
            }
        }


        private void ClearForm()
        {
            txtDeviceID.Clear();
            txtSpek.Clear();
            txtLokasiPC.Clear();
            cmbStatus.SelectedIndex = -1;
        }

        private void dgvDevices_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dgvDevices.Rows[e.RowIndex];
                txtDeviceID.Text = row.Cells["DeviceID"].Value.ToString();
                txtSpek.Text = row.Cells["Spek"].Value.ToString();
                txtLokasiPC.Text = row.Cells["LokasiPC"].Value.ToString();
                cmbStatus.SelectedItem = row.Cells["StatusPC"].Value.ToString();
            }
        }

        private void DeviceForm_Load(object sender, EventArgs e)
        {

        }

        private void txtDeviceID_TextChanged(object sender, EventArgs e)
        {

        }
    }
}
